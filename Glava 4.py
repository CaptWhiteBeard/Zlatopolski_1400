# 4.1. Даны два различных вещественных числа. Определить:
# а) какое из них больше;
# б) какое из них меньше.

def compare(a, b):
    if a > b:
        return f'Число {a} больше, чем {b}'
    else:
        return f'Число {b} больше, чем {a}'


# 4.2. Рассчитать значение у при заданном значении х:
# y = sin^2(x), x > 0
# y = 1 - 2 * sin(x^2), x <= 0
import math

def y_func(x):
    if x > 0:
        y = (math.sin(x)) ** 2
    else:
        y = 1 - 2 * math.sin(x ** 2)
    return y

# 4.3 Рассчитать значение у при заданном значении х:
# y = sin^2(x), x > 0
# y = 1 + 2 * sin(x^2), x <= 0
import math

def y_func(x):
    if x > 0:
        y = (math.sin(x)) ** 2
    else:
        y = 1 + 2 * math.sin(x ** 2)
    return y

# 4.4 Определить, в какую из областей – I или II (рис. 4.1) – по-
# падает точка с заданными координатами. Для простоты принять,
# что точка не попадает на границу областей.

# (Описание рисунка - Дан график декартовой системы координат с линией x = 4.
# Область I - слева от этой линии, область II - справа от этой линии)

def find_oblast(x=0, y=0):
    if x > 4:
        return f'Это область II'
    elif x < 4:
        return 'Это область I'
    elif x == 4:
        return 'Вы попали чётко на линию'

# 4.5 Определить, в какую из областей – I или II (рис. 4.2) – по-
# падает точка с заданными координатами. Для простоты принять,
# что точка не попадает на границу областей.

# (Описание рисунка - Дан график декартовой системы координат с линией y = 3;
#  Область I - выше этой линии, Область II - ниже этой линии)

def find_oblast(x=0, y=0):
    if y < 3:
        return f'Это область II'
    elif y > 3:
        return 'Это область I'
    elif y == 3:
        return 'Вы попали чётко на линию'

