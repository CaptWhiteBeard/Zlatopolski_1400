####################################################################################
# 3.1.	 
####################################################################################

def cm_m(cm):
    return f'В {cm} см {cm // 100} полных метров'

####################################################################################
# 3.2.	
####################################################################################

def kg_cent(kg):
    return f'В {kg} кг {kg // 100} центнеров'

####################################################################################
# 3.3.
####################################################################################

print(f'За этот период прошло {234 // 7} недель')

####################################################################################
# 3.4.
####################################################################################

def apples(N, k):
    return f'Каждому школьнику достанется {k // N} яблок, а в корзинке останется {k % N}'

####################################################################################
# 3.5.
####################################################################################

def otrezh_kvadrat(a=543, b=130, c=130):
    a1 = a // c
    a2 = b // c
    if a < c or b < c:
        return f"Хер ты получишь квадрат со стороной {c}"
    elif a1 >= 1 and a2 >= 1:
        return f'Ты можешь получить {min(a1, a2)} квадратов'

####################################################################################
# 3.6.	
####################################################################################

def kupe(mesto):
    if 0 <= mesto <= 36:
        return f'Ваше место находится в {mesto // 4} купе'
    else:
        return 'Твоё место в другом поезде, идиот'

####################################################################################
# 3.7.	
####################################################################################

import math


def etazh(kvartira):
    if 0 <= kvartira <= 15:
        return f'Ваш этаж - {math.ceil(kvartira / 3)}'
    else:
        return 'Вали с нашей территории'

####################################################################################
# 3.8.	
####################################################################################

n = 20
m = 15
a = [[0] * m for i in range(n)]  # Здесь создаётся пустой массив

k = 1643
for i in range(n):
    for j in range(m):  # Здесь этот массив заполняется номерами билетов
        a[i][j] = k
        k += 1


def row(bilet):
    if 1643 <= bilet < 1943:
        for i in range(n):
            for j in range(m):
                if a[i][j] == bilet:
                    return f'Ваш ряд: {i + 1}'  # Здесь проверяется условие попадание билета в этот зал
    else:
        return f'Вы не в том кинотеатре'

####################################################################################
# 3.9.	
####################################################################################

def time(secunds):
    print(f'С начала суток прошло {secunds // 3600} часов')
    print(f'С начала очередного часа прошло {secunds % 3600} минут')
    print(f'С начала очередной минуты прошло {secunds % 3600 % 60} секунд')

####################################################################################
# 3.10.	
####################################################################################

nedela = {1: 'понедельник',
          2: 'вторник',
          3: 'среда',
          4: 'четверг',
          5: 'пятница',
          6: 'суббота',
          7: 'воскресенье'}


def den_nedely(k=1, d=1):
    if k not in range(1, 366):
        return 'В году 365 дней, дебил!'
    elif d not in range(1, 8):
        return "В неделе всего 7 дней, придурок!"

    if d == 1:
        if k % 7 == 0:
            return f'Этот день недели - {nedela.get(k % 7 + 7)}'
        else:
            return f'Этот день недели - {nedela.get(k % 7)}'
    elif d != 1:
        if (k + d - 1) % 7 == 0:
            return f'Этот день недели - {nedela.get((k + d - 1) % 7 + 7)}'
        else:
            return f'Этот день недели - {nedela.get((k + d - 1) % 7)}'

####################################################################################
# 3.11.	 
####################################################################################

def mesyac(n):
    return n % 12 + 1


####################################################################################
####################################################################################
"""
Замечание
В задачах 3.12–3.15 условный оператор не использовать.
"""
####################################################################################
####################################################################################


####################################################################################
# 3.12.	
####################################################################################

import math

"""
c = []
m, n, k, r = 4, 5, 1, 1  # Объявление переменных

for i in range(m):
    c.append([])
    r += 1
    for j in range(n):
        c[i].append(k)  # Создание массива квартира - порядковый номер
        k += 4  # Типа c[0] - это 1 порядковый номер, т.о. 1,5,9,13,17 кв - первые на своих этажах
    k = r


def kvartira(nomer):
    print(f'Квартира находится на {math.ceil(nomer / 4)} этаже')  # Находим этаж квартиры
    check = 0
    for i in range(m):
        while nomer not in c[i]:  # Находим, какому массиву принадлежит число, возвращаем его
            i += 1
            check = i
    print(f'Эта квартира по счёту {check + 1} на этаже')
"""


# Рещение, представленное выше рабочее, но не подходит под условие "не использовать услнвные операторы"

def kvartira(nomer):
    print(f'Квартира находится на {math.ceil(nomer / 4)} этаже')
    print(f'Квартира по счёту {abs(nomer - (math.ceil(nomer / 4) - 1) * 4)} на этаже')

####################################################################################
# 3.13.	
####################################################################################

import math

c = []
m, n, k = 10, 5, 1

for i in range(m):  # Данный цикл не нужен совсем, он создан только для того, чтобы увидеть двумерный массив
    c.append([])
    for j in range(n):
        c[i].append(k)
        k += 1


def koord(chislo):
    print(f'Данное число находится в {math.ceil(chislo / 5)} строке')
    print(f'Данное число находится в {(abs(chislo - (math.ceil(chislo / 5) - 1) * 5))} столбце')

####################################################################################
# 3.14.	
####################################################################################

def kv_pod(nomer):
    podezd = math.ceil(nomer / 54)
    etazh = nomer - (podezd - 1) * 54
    print(f'Данная квартира находится в {podezd} подъезде')
    print(f'Данная квартира находится на {math.ceil(etazh / 6)} этаже')
    print(f'Данная квартира по счёту {abs(nomer - (math.ceil(nomer / 6) - 1) * 6)} на этаже')

####################################################################################
# 3.15.	
####################################################################################

import math


def tovar1(nomer):
    yarus = math.ceil(nomer / 120)
    sekcia = math.ceil((nomer - 120 * (yarus - 1)) / 15)

    print(f'Данный товар находится в секции {sekcia} на ярусе {yarus}')


def tovar2(nomer):
    yarus = nomer - 10 * (math.ceil(nomer / 10) - 1)
    sekcia = math.ceil(nomer / 150)

    print(f'Данный товар находится в секции {sekcia} на ярусе {yarus}')

####################################################################################
# 3.16.	
####################################################################################

def des_ed(chislo):
    if chislo > 99 or chislo < 10:
        print("Двузначное число!!!!")
    else:
        print(f'Число десятков в числе - {chislo // 10}')
        print(f'Число единиц в числе - {chislo % 10}')

####################################################################################
# 3.17.	
####################################################################################

def digit_sum(chislo):
    if chislo > 99 or chislo < 10:
        print("Двузначное число!!!!")
    else:
        print(f'Сумма цифр в числе - {chislo // 10 + chislo % 10}')

####################################################################################
# 3.18.	
####################################################################################

def digit_naoborot(chislo):
    if chislo > 99 or chislo < 10:
        print("Двузначное число!!!!")
    else:
        print(f'Число наоборот - {10 * (chislo % 10) + 1 * (chislo // 10)}')

####################################################################################
# 3.19.	 
####################################################################################

def digits(chislo):
    if chislo < 100 or chislo > 999:
        print("Трёхзначное число!!!")
    else:
        print(chislo // 100, ', ', chislo // 10 % 10, ', ', chislo % 10, sep='')

####################################################################################
# 3.20.	
####################################################################################

def digit_3_ops(chislo):
    if chislo < 100 or chislo > 999:
        print("Трёхзначное число!!!")
    else:
        print(f'Число единиц в числе - {chislo % 10}')
        print(f'Число десятков в числе - {chislo // 10}')
        print(f'Сумма цифр числа - {(chislo // 100) + (chislo // 10 % 10) + (chislo % 10)}')
        print(f'Произведение цифр числа - {(chislo // 100) * (chislo // 10 % 10) * (chislo % 10)}')

####################################################################################
# 3.21.	
####################################################################################

def digits_3_naoborot(chislo):
    if chislo < 100 or chislo > 999:
        print("Трёхзначное число!!!")
    else:
        print(f'Число наоборот - {1 * (chislo // 100) + 10 * (chislo // 10 % 10) + 100 * (chislo % 10)}')

####################################################################################
# 3.22.	 
####################################################################################

def digit_1to3(chislo):
    if chislo < 100 or chislo > 999:
        print("Трёхзначное число!!!")
    else:
        print(
            f'Первое слева цифру перенесли в конец - {1 * (chislo // 100) + 100 * (chislo // 10 % 10) + 10 * (chislo % 10)}')

####################################################################################
# 3.23.	
####################################################################################

def digit_3to1(chislo):
    if chislo < 100 or chislo > 999:
        print("Трёхзначное число!!!")
    else:
        print(
            f'Первую справа цифру перенесли в начало - {10 * (chislo // 100) + 1 * (chislo // 10 % 10) + 100 * (chislo % 10)}')

####################################################################################
# 3.24.	
####################################################################################

def digit_2to1(chislo):
    if chislo < 100 or chislo > 999:
        print("Трёхзначное число!!!")
    else:
        print(
            f'Первую и вторую цифры поменяли - {10 * (chislo // 100) + 100 * (chislo // 10 % 10) + 1 * (chislo % 10)}')

####################################################################################
# 3.25.	
####################################################################################

def digit_2to3(chislo):
    if chislo < 100 or chislo > 999:
        print("Трёхзначное число!!!")
    else:
        print(
            f'Вторую и третью цифры поменяли - {100 * (chislo // 100) + 1 * (chislo // 10 % 10) + 10 * (chislo % 10)}')

####################################################################################
# 3.26.	
####################################################################################

def perestanovka(chislo):  # Допустим, 123
    if (chislo < 100 or chislo > 999) or \
            (chislo // 100 == chislo // 10 % 10 or chislo // 100 == chislo % 10 or chislo // 10 % 10 == chislo % 10):
        print("Трёхзначное число с разными цифрами!!!!")
    else:
        print(1 * (chislo // 100) + 10 * (chislo // 10 % 10) + 100 * (chislo % 10))  # 231 - 213 - 132 - 312 - 321
        print(1 * (chislo // 100) + 100 * (chislo // 10 % 10) + 10 * (chislo % 10))
        print(10 * (chislo // 100) + 1 * (chislo // 10 % 10) + 100 * (chislo % 10))
        print(10 * (chislo // 100) + 100 * (chislo // 10 % 10) + 1 * (chislo % 10))
        print(100 * (chislo // 100) + 1 * (chislo // 10 % 10) + 10 * (chislo % 10))
        print(f'А шестая комбинация - это само число {chislo}')

####################################################################################
# 3.27.	
####################################################################################

def sum_digit(chislo):
    if len(str(chislo)) == 4:
        return \
            f'Сумма цифр числа - {chislo % 10 + chislo // 1000 + chislo // 100 % 10 + chislo // 10 % 10}'
    elif len(str(chislo)) == 5:
        return \
            f'Сумма цифр числа - {chislo // 10000 + chislo // 1000 % 10 + chislo // 100 % 10 + chislo // 10 % 10 + chislo % 10}'

####################################################################################
# 3.28.	
####################################################################################

def digits4(chislo, n=1):
    if chislo > 9999 or chislo < 1000:
        return "Четырёхзначное число, дятел!!!"

    naoborot = 1000 * (chislo % 10) + 100 * (chislo // 10 % 10) + 10 * (chislo // 100 % 10) + 1 * (chislo // 1000 % 10)
    # naoborot_str = reversed(str(chislo))

    perestanovka_12_34 = 10 * (chislo % 10) + 1 * (chislo // 10 % 10) + 1000 * (chislo // 100 % 10) + 100 * (
            chislo // 1000 % 10)

    def perestanovka_12_34_str(chislo):
        a = str(chislo)
        l = len(a)

        part_1 = a[0:l // 2]
        part_2 = a[l // 2:]

        res = part_2 + part_1

        return res

    perestanovka_23 = 1 * (chislo % 10) + 100 * (chislo // 10 % 10) + 10 * (chislo // 100 % 10) + 1000 * (
            chislo // 1000 % 10)

    perestanovka_half1_half2 = (chislo // 100) + 100 * (chislo % 100)

    print(f'Число наоборот - {naoborot}')
    print(f'Перестановка 1 и 2, 3 и 4 чисел - {perestanovka_12_34}')
    print(f'Перестановка 2 и 3 цифр - {perestanovka_23}')
    if n == 1:
        print(f'Перестановка первых двух цифр с двумя другими - {perestanovka_half1_half2}')
    elif n == 2:
        print(f'Перестановка первых двух цифр с двумя другими - {perestanovka_12_34_str(chislo)}')


# Задача выше была понята так, что только пункт Г надо выполнить в двух вариантах.


####################################################################################
# 3.29.	
####################################################################################

def ed_des(chislo):
    if chislo < 10:
        return "Введите число больше 9!!!"

    print(f'Единиц в числе - {chislo % 10}')
    print(f'Десятков в числе - {chislo // 10}')

####################################################################################
# 3.30.	 
####################################################################################

def des_sot(chislo):
    if chislo < 100:
        return f'Число должно быть больше 99!!!'

    print(f'Десятков в числе - {chislo % 100 // 10}')
    print(f'Сотен в числе - {chislo // 100}')

####################################################################################
# 3.31.	 
####################################################################################

def sot_tis(chislo):
    if chislo < 1000:
        return f'Нужно число больше 999!!!'

    print(f'Сотен в числе - {chislo // 100 % 10}')
    print(f'Тысяч в числе - {chislo // 1000}')
    
####################################################################################
# 3.32.	 
####################################################################################

def nashel_x(chislo=237):  # Допустим, сюда вводим результат, который есть,и надо найти исходное число
    if chislo < 100 or chislo > 999:
        return "Трёхзначное число!!!"

    a = chislo % 100  # Отнимаем число, которое приписали слева
    b = a * 10  # Возвращаем деление на 10
    c = b + chislo // 100  # Добавляем число, которое вычли

    return f'Изначальное число - {c}'

####################################################################################
# 3.33.	
####################################################################################

def nashel_n(chislo):
    if chislo > 999 or chislo < 100:
        return "Трёхзначное число!!!"

    a = chislo - (chislo % 10)  # Вычитаем последнюю цифру
    b = a // 10  # результат делим на 10
    c = 100 * (chislo % 10) + b  # к частному приписываем слева последнюю цифру первоначального числа

    return f'Полученное число - {c}'

####################################################################################
# 3.34.	
####################################################################################

def nashel_x_1(chislo):
    if chislo > 999 or chislo < 1:
        return "Попробуй другое число!"

    a = chislo // 10
    b = 100 * (chislo % 10) + a

    return f'Первоначальное число - {b}'

####################################################################################
# 3.35.	 
####################################################################################

"См. задачу 3.34"

####################################################################################
# 3.36.	 
####################################################################################

def nashel_x_2(chislo):
    if chislo < 10 or chislo > 999 or chislo // 10 % 10 == 0:
        return "Попробуй другое число"

    a = 100 * (chislo // 10 % 10) + 10 * (chislo // 100) + 1 * (chislo % 10)

    return f'Первоначальное число - {a}'

####################################################################################
# 3.37.	
####################################################################################

"См. задачу 3.37"

####################################################################################
# 3.38.	
####################################################################################

def nashel_x_3(chsilo):
    if chsilo > 999 or chsilo < 100:
        return "Попробуй другое число"

    a = 100 * (chsilo // 100) + 10 * (chsilo % 10) + 1 * (chsilo // 10 % 10)

    return f'Первоначальное число - {a}'

####################################################################################
# 3.39.	
####################################################################################

"См. 3.38"

####################################################################################
# 3.40.	 
####################################################################################

def nashel_x_4(chislo):
    if chislo < 1 or chislo > 999:
        return 'Попробуй другое число'

    a = 100 * (chislo % 10) + 10 * (chislo // 10 % 10) + 1 * (chislo // 100)

    return f'Первоначальное число - {a}'

####################################################################################
# 3.41.	
####################################################################################

"См. задачу 3.40"


####################################################################################
####################################################################################

"ЗАДАЧИ ПОВЫШЕННОЙ СЛОЖНОСТИ"

####################################################################################
####################################################################################


####################################################################################
# 3.42.	 
####################################################################################

def sum_dvuh_chisel(a, b):
    a1 = (a % 10 + b) % 10
    a2 = a // 10 + (a % 10 + b) // 10

    return a2, a1

####################################################################################
# 3.43. 
####################################################################################


####################################################################################
# 3.44. 
####################################################################################
